name: Generic tests workflow

on:
    # schedule:
    # * it will run at 1 A.M and 1 P.M
    # - cron:  '00 01,13 * * *'
    workflow_dispatch:
        inputs:
            logLevel:
                description: 'Log level'
                required: true
                default: 'warning'
            tags:
                description: 'Test scenario tags'

jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - name: Check out code
              uses: actions/checkout@v2

            - name: Setup node
              uses: actions/setup-node@v1
              with:
                  node-version: '12'

            - uses: microsoft/playwright-github-action@v1

            - name: Install dependencies
              run: yarn install  --frozen-lockfile

            - name: Export secrets
              run: |
                  echo "CONFIG_CWA_API=${{ secrets.CONFIG_CWA_API}}" >> $GITHUB_ENV;
                  echo "CONFIG_CUSTOMER_ID=${{ secrets.CONFIG_CUSTOMER_ID}}" >> $GITHUB_ENV;
                  echo "CONFIG_CLIENT_ID=${{ secrets.CONFIG_CLIENT_ID}}" >> $GITHUB_ENV;
                  echo "CONFIG_CLIENT_SECRET=${{ secrets.CONFIG_CLIENT_SECRET}}" >> $GITHUB_ENV;
                  echo "CONFIG_BUILDER_URL=${{ secrets.CONFIG_BUILDER_URL}}" >> $GITHUB_ENV
              shell: bash

            - name: Run tests
              run: |
                  echo "startDate=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV;
                  yarn genericTest
              shell: bash

            - name: Upload artifacts
              if: always()
              uses: actions/upload-artifact@v2
              with:
                  name: test-artifacts
                  path: artifacts/

            - name: Send Notification to Slack - Failure
              if: ${{ failure() }}
              uses: rtCamp/action-slack-notify@master
              env:
                SLACK_CHANNEL: wsi-factory-test-results
                SLACK_COLOR: '#E01E5A'
                SLACK_TITLE: Test status
                SLACK_MESSAGE: ':warning: *Repository:* ${{ github.event.repository.name}}  *Result:* ${{ job.status }} :warning:'
                SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
                MSG_MINIMAL: false

            - name: Send Notification to Slack - Success
              uses: rtCamp/action-slack-notify@master
              env:
                SLACK_CHANNEL: wsi-factory-test-results
                SLACK_COLOR: '#80FF33'
                SLACK_TITLE: Test status
                SLACK_MESSAGE: ':success-icon: *Repository:* ${{ github.event.repository.name}}  *Result:* ${{ job.status }} :success-icon:'
                SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
                MSG_MINIMAL: false

            - name: Send Report to Power BI
              if: always()
              run: |
                  echo $startDate;
                  export serverVersionrTest=$(curl -k -s https://$CONFIG_BUILDER_URL/status/up | jq -r '.version');
                  echo $serverVersionrTest;
                  export runNumber="${{ github.run_number }}";
                  export workflowName="${{ github.workflow }}";
                  export endDate=$(date -u +"%Y-%m-%dT%H:%M:%SZ");
                  export powerBiApiKey=${{ secrets.POWER_BI_API_KEY}};
                  node src/ci-scripts/report.js
              shell: bash
